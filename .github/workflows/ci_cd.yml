# Name of the workflow as it appears in the GitHub Actions UI
name: Data Science CI Pipeline

# Define when the workflow should run
on:
  push:              # Run this workflow on every push to the repo
  pull_request:      # Run this workflow when a PR is opened or updated
  schedule:          # Also run this workflow on a schedule
    - cron: '0 0 1 * *'  # Run at 00:00 (UTC)  on the 1st of every month using cron syntax
  workflow_dispatch: # Enables manual trigger via Github UI

jobs:
  build-and-test:              # Job name (can be anything)
    runs-on: ubuntu-latest     # Use the latest available Ubuntu runner from GitHub

    steps:                     # Define the individual steps in this job
      - name: Checkout code
        uses: actions/checkout@v3  # Step 1: Check out the repo code into the runner

      - name: Set up Python
        uses: actions/setup-python@v5  # Step 2: Install and configure Python
        with:
          python-version: '3.10'       # Specify the Python version to use

      - name: Install dependencies
        run: |                         # Step 3: Install Python dependencies from requirements.txt
          python -m pip install --upgrade pip  
          pip install -r requirements.txt      

      - name: Create output directory
        run: mkdir -p outputs          # Step 4: Create a directory to store model and test logs

      - name: Log current UTC time
        run: date -u                   # Print the time the job started in UTC

      - name: Run tests and log output
        run: |                         # Step 5: Run the test suite using pytest and capture logs, Set PYTHONPATH and redirect output to a log file
          PYTHONPATH=. pytest tests/ > outputs/test_log.txt  
        continue-on-error: true        # Allow the job to continue even if tests fail, so logs can still be uploaded

      - name: List contents of outputs folder
        run: ls -R outputs || echo "outputs folder is empty"

      - name: Generate artifact version tag
        run: echo "ARTIFACT_TAG=model-and-logs-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Upload model and test logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_TAG }}
          path: |
            outputs/model.pkl
            outputs/test_log.txt
